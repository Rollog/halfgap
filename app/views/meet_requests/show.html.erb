<% content_for :content do %>
  <section id="map-wrapper">
  <!-- Click the allow button to let the halfgap find your location. -->
    <article></article>
    <script>

      var map,
          geocoder,
          markersArray = [],
          directionsDisplay,
          polyline=[],
          businessesArray=[],
          infowindow;

      function initialize() {

        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) 
          {
            geocoder = new google.maps.Geocoder;
            directionsDisplay = new google.maps.DirectionsRenderer;

            var mapcanvas = document.createElement('div');
            mapcanvas.id = 'mapcontainer';
            document.querySelector('article').appendChild(mapcanvas);

            var coords = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

            // Create an array of styles.
            var styles = [
              {
                stylers: [
                  { hue: "#00ffe6" },
                  { saturation: -20 }
                ]
              },{
                featureType: "road.local",
                elementType: "geometry",
                stylers: [
                  { hue: "#00ffee" },
                  { saturation: 50 }
                ]
              },{
                featureType: "road",
                elementType: "labels",
                stylers: [
                  { visibility: "off" }
                ]
              }
            ];

            // Create a new StyledMapType object, passing it the array of styles,
            // as well as the name to be displayed on the map type control.
            var styledMap = new google.maps.StyledMapType(styles,
              {name: "Styled Map"});
            
            var options = {
              zoom: 10,
              mapTypeControl: false,
              center: coords,
              navigationControlOptions: {
                style: google.maps.NavigationControlStyle.SMALL
              },
              mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            map = new google.maps.Map(document.getElementById("mapcontainer"), options);

            //Associate the styled map with the MapTypeId and set it to display.
            map.mapTypes.set('map_style', styledMap);
            map.setMapTypeId('map_style');
            
            var marker = new google.maps.Marker({
                position: coords,
                animation: google.maps.Animation.DROP,
                map: map,
                title: "<%= current_user.name %>, <%= current_user.updated_at %>"
            });

            // stores geolocation of user
            $(function() {
              var center = map.getCenter();
              // user_id will make user id dynamic to current_user
              var user_id = <%= current_user.id.to_json %>
              // posts lat and lng to server
              $.ajax({
                url: "/users/current_location/" + user_id,
                data: { latitude: center.lat(), longitude: center.lng() },
                type: "POST",
                dataType: "json",
                success: function(data) {
                  console.log(data);
                },
                failure: function() {
                  alert("Unsuccessful");
                }
              });
            

              // finds users friend's last location
              var friendLocation = new google.maps.LatLng(<%= @friend.latitude %>, <%= @friend.longitude %>);

              var directionsService = new google.maps.DirectionsService();
              var directionsRequest = {
                  origin: center,
                  destination: friendLocation,
                  travelMode: google.maps.DirectionsTravelMode.DRIVING,
                  unitSystem: google.maps.UnitSystem.METRIC
              };

              directionsService.route(
                directionsRequest,
                function(response, status) {
                  if (status == google.maps.DirectionsStatus.OK) {
                    new google.maps.DirectionsRenderer({
                      map: map,
                      directions: response
                    });

                    console.log(response.routes[0].legs[0].steps[0].path[0].lat());

                    var midArray = [];             

                    for(r = 0; r < response.routes.length; ++r)
                    {
                      rt = response.routes[r];
                      for(l = 0; l < rt.legs.length; ++l)
                      {
                        lg = rt.legs[l];
                        for(s = 0; s < lg.steps.length; ++s)
                        {
                          st = lg.steps[s];
                          for(p = 0; p < st.path.length; ++p)
                          {
                            pth = st.path[p];
                            midArray.push(pth);
                            // console.log(pth.lat() + " " + pth.lng());
                          }
                        }
                      }
                    }

                    var midpoint = midArray[midArray.length >> 1];
                    console.log(midpoint);
                    console.log(response.routes[0].legs[0].steps[0]);
                    
                    var midMarker = new google.maps.Marker({
                      position: midpoint,
                      map: map,
                      draggable: true
                    });

                    var request = {
                      location: midpoint,
                      radius: 500,
                      name: ['<%= @received_request.message %>']
                    };

                    infowindow = new google.maps.InfoWindow();
                    var service = new google.maps.places.PlacesService(map);
                    var searchingIt = service.nearbySearch(request, callback);

                    console.log(request);
                    // debugger;
                  }
                  else
                    $("#error").append("Unable to retrieve your route<br />");
                }
              );
            });
          })
        } 
        else {
        // Browser doesn't support Geolocation
          handleNoGeolocation(false);
        }
      }

      function callback(results, status) {
        if (status == google.maps.places.PlacesServiceStatus.OK) {
          for (var i = 0; i < results.length; i++) {
            createMarker(results[i]);
          }
        }
      }

      function createMarker(place) {
        var placeLoc = place.geometry.location;
        var marker = new google.maps.Marker({
          map: map,
          position: place.geometry.location
        });

        google.maps.event.addListener(marker, 'click', function() {
          infowindow.setContent(place.name);
          infowindow.open(map, this);
        });
      }

      google.maps.event.addDomListener(window, "load", initialize);

    </script>
  </section>
<% end %>